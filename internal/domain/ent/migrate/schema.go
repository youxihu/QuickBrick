// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PipelineExecutionLogColumns holds the columns for the "pipeline_execution_log" table.
	PipelineExecutionLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "bigint"}},
		{Name: "env", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "type", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(50)"}},
		{Name: "event_type", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(50)"}},
		{Name: "pipeline_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "username_email", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "commit_id", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "project_url", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "status", Type: field.TypeString, Default: "unknown", SchemaType: map[string]string{"mysql": "varchar(20)"}},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "datetime"}},
	}
	// PipelineExecutionLogTable holds the schema information for the "pipeline_execution_log" table.
	PipelineExecutionLogTable = &schema.Table{
		Name:       "pipeline_execution_log",
		Columns:    PipelineExecutionLogColumns,
		PrimaryKey: []*schema.Column{PipelineExecutionLogColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PipelineExecutionLogTable,
	}
)

func init() {
	PipelineExecutionLogTable.Annotation = &entsql.Annotation{
		Table: "pipeline_execution_log",
	}
}
